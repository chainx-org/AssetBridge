// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package WETH10

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// WETH10ABI is the input ABI used to generate the binding from.
const WETH10ABI = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploymentChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"depositToAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// WETH10Bin is the compiled bytecode used for deploying new contracts.
var WETH10Bin = "0x6101006040527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd96080908152507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960a0908152503480156200006057600080fd5b5060004690508060c081815250506200007f816200008d60201b60201c565b60e08181525050506200018b565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280601181526020017f5772617070656420457468657220763130000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208430604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001209050919050565b60805160a05160c05160e051613c0e620001da600039806119ef52806136f15250806119ba528061347b52806136bc52508061198b52806135d052508061214552806128745250613c0e6000f3fe6080604052600436106101bb5760003560e01c80637ecebe00116100ec578063b760faf91161008a578063d0e30db011610064578063d0e30db014610c1c578063d505accf14610c26578063d9d98ce414610ccc578063dd62ed3e14610d3b57610274565b8063b760faf914610ae7578063cae9ca5114610b2b578063cd0d009614610bf157610274565b80639555a942116100c65780639555a9421461093057806395d89b41146109ab578063a0712d6814610a3b578063a9059cbb14610a7657610274565b80637ecebe00146108755780638237e538146108da5780638b28d32f1461090557610274565b8063313ce567116101595780635cffe9de116101335780635cffe9de146106165780635ddb7d7e146106fc578063613255ab146107ab57806370a082311461081057610274565b8063313ce567146104f75780633644e515146105255780634000aea01461055057610274565b8063205c287811610195578063205c2878146103a557806323b872dd146104005780632e1a7d4d1461049157806330adf81f146104cc57610274565b806306fdde0314610279578063095ea7b31461030957806318160ddd1461037a57610274565b3661027457346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef346040518082815260200191505060405180910390a3005b600080fd5b34801561028557600080fd5b5061028e610dc0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ce5780820151818401526020810190506102b3565b50505050905090810190601f1680156102fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031557600080fd5b506103626004803603604081101561032c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df9565b60405180821515815260200191505060405180910390f35b34801561038657600080fd5b5061038f610eeb565b6040518082815260200191505060405180910390f35b3480156103b157600080fd5b506103fe600480360360408110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef7565b005b34801561040c57600080fd5b506104796004803603606081101561042357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611120565b60405180821515815260200191505060405180910390f35b34801561049d57600080fd5b506104ca600480360360208110156104b457600080fd5b8101908080359060200190929190505050611761565b005b3480156104d857600080fd5b506104e1611989565b6040518082815260200191505060405180910390f35b34801561050357600080fd5b5061050c6119ad565b604051808260ff16815260200191505060405180910390f35b34801561053157600080fd5b5061053a6119b2565b6040518082815260200191505060405180910390f35b34801561055c57600080fd5b506105fe6004803603606081101561057357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156105ba57600080fd5b8201836020820111156105cc57600080fd5b803590602001918460018302840111640100000000831117156105ee57600080fd5b9091929391929390505050611a15565b60405180821515815260200191505060405180910390f35b34801561062257600080fd5b506106e46004803603608081101561063957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106a057600080fd5b8201836020820111156106b257600080fd5b803590602001918460018302840111640100000000831117156106d457600080fd5b9091929391929390505050611ef2565b60405180821515815260200191505060405180910390f35b6107936004803603604081101561071257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561074f57600080fd5b82018360208201111561076157600080fd5b8035906020019184600183028401116401000000008311171561078357600080fd5b909192939192939050505061264c565b60405180821515815260200191505060405180910390f35b3480156107b757600080fd5b506107fa600480360360208110156107ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127e9565b6040518082815260200191505060405180910390f35b34801561081c57600080fd5b5061085f6004803603602081101561083357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612842565b6040518082815260200191505060405180910390f35b34801561088157600080fd5b506108c46004803603602081101561089857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061285a565b6040518082815260200191505060405180910390f35b3480156108e657600080fd5b506108ef612872565b6040518082815260200191505060405180910390f35b34801561091157600080fd5b5061091a612896565b6040518082815260200191505060405180910390f35b34801561093c57600080fd5b506109a96004803603606081101561095357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061289c565b005b3480156109b757600080fd5b506109c0612d08565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a005780820151818401526020810190506109e5565b50505050905090810190601f168015610a2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a4757600080fd5b50610a7460048036036020811015610a5e57600080fd5b8101908080359060200190929190505050612d41565b005b348015610a8257600080fd5b50610acf60048036036040811015610a9957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612df6565b60405180821515815260200191505060405180910390f35b610b2960048036036020811015610afd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131f3565b005b348015610b3757600080fd5b50610bd960048036036060811015610b4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b9557600080fd5b820183602082011115610ba757600080fd5b80359060200191846001830284011164010000000083111715610bc957600080fd5b90919293919293905050506132a8565b60405180821515815260200191505060405180910390f35b348015610bfd57600080fd5b50610c06613479565b6040518082815260200191505060405180910390f35b610c2461349d565b005b348015610c3257600080fd5b50610cca600480360360e0811015610c4957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050613551565b005b348015610cd857600080fd5b50610d2560048036036040811015610cef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061399e565b6040518082815260200191505060405180910390f35b348015610d4757600080fd5b50610daa60048036036040811015610d5e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613a4b565b6040518082815260200191505060405180910390f35b6040518060400160405280601181526020017f577261707065642045746865722076313000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60006003544701905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8181036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360008373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d806000811461109e576040519150601f19603f3d011682016040523d82523d6000602084013e6110a3565b606091505b505090508061111a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f574554483a20455448207472616e73666572206661696c65640000000000000081525060200191505060405180910390fd5b50505050565b60003373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611364576000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146113625782811015611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f574554483a2072657175657374206578636565647320616c6c6f77616e63650081525060200191505060405180910390fd5b6000838203905080600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115305760008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611434576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613b6f6025913960400191505060405180910390fd5b8281036000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a350611756565b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156115cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8281036000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360003373ffffffffffffffffffffffffffffffffffffffff168460405180600001905060006040518083038185875af1925050503d80600081146116d7576040519150601f19603f3d011682016040523d82523d6000602084013e6116dc565b606091505b5050905080611753576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f574554483a20455448207472616e73666572206661696c65640000000000000081525060200191505060405180910390fd5b50505b600190509392505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8181036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360003373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114611908576040519150601f19603f3d011682016040523d82523d6000602084013e61190d565b606091505b5050905080611984576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f574554483a20455448207472616e73666572206661696c65640000000000000081525060200191505060405180910390fd5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b6000804690507f000000000000000000000000000000000000000000000000000000000000000081146119ed576119e881613a70565b611a0f565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611be25760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811015611ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613b6f6025913960400191505060405180910390fd5b8481036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550846000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a350611e08565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811015611c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8481036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a360003373ffffffffffffffffffffffffffffffffffffffff168660405180600001905060006040518083038185875af1925050503d8060008114611d89576040519150601f19603f3d011682016040523d82523d6000602084013e611d8e565b606091505b5050905080611e05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f574554483a20455448207472616e73666572206661696c65640000000000000081525060200191505060405180910390fd5b50505b8473ffffffffffffffffffffffffffffffffffffffff1663a4c0ed36338686866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b158015611ead57600080fd5b505af1158015611ec1573d6000803e3d6000fd5b505050506040513d6020811015611ed757600080fd5b81019080805190602001909291905050509050949350505050565b60003073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f574554483a20666c617368206d696e74206f6e6c79205745544831300000000081525060200191505060405180910390fd5b6dffffffffffffffffffffffffffff8016841115611ffe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613b946024913960400191505060405180910390fd5b83600354016003819055506dffffffffffffffffffffffffffff80166003541115612091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f574554483a20746f74616c206c6f616e206c696d69742065786365656465640081525060200191505060405180910390fd5b836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a37f00000000000000000000000000000000000000000000000000000000000000008673ffffffffffffffffffffffffffffffffffffffff166323e30c8b333088600089896040518763ffffffff1660e01b8152600401808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050975050505050505050602060405180830381600087803b15801561223057600080fd5b505af1158015612244573d6000803e3d6000fd5b505050506040513d602081101561225a57600080fd5b8101908080519060200190929190505050146122de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f574554483a20666c617368206c6f616e206661696c656400000000000000000081525060200191505060405180910390fd5b6000600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146124eb57848110156123fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f574554483a2072657175657374206578636565647320616c6c6f77616e63650081525060200191505060405180910390fd5b6000858203905080600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b60008060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015612587576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8581036000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040518082815260200191505060405180910390a3856003540360038190555060019250505095945050505050565b6000346000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef346040518082815260200191505060405180910390a38373ffffffffffffffffffffffffffffffffffffffff1663a4c0ed36333486866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b1580156127a557600080fd5b505af11580156127b9573d6000803e3d6000fd5b505050506040513d60208110156127cf57600080fd5b810190808051906020019092919050505090509392505050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461282557600061283b565b6003546dffffffffffffffffffffffffffff8016035b9050919050565b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612ade576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612adc57818110156129ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f574554483a2072657175657374206578636565647320616c6c6f77616e63650081525060200191505060405180910390fd5b6000828203905080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505b505b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612b7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360008373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114612c85576040519150601f19603f3d011682016040523d82523d6000602084013e612c8a565b606091505b5050905080612d01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f574554483a204574686572207472616e73666572206661696c6564000000000081525060200191505060405180910390fd5b5050505050565b6040518060400160405280600681526020017f574554483130000000000000000000000000000000000000000000000000000081525081565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612fc35760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613b6f6025913960400191505060405180910390fd5b8281036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3506131e9565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561305f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613bb86021913960400191505060405180910390fd5b8281036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360003373ffffffffffffffffffffffffffffffffffffffff168460405180600001905060006040518083038185875af1925050503d806000811461316a576040519150601f19603f3d011682016040523d82523d6000602084013e61316f565b606091505b50509050806131e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f574554483a20455448207472616e73666572206661696c65640000000000000081525060200191505060405180910390fd5b50505b6001905092915050565b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef346040518082815260200191505060405180910390a350565b600083600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925866040518082815260200191505060405180910390a38473ffffffffffffffffffffffffffffffffffffffff1662ba451f338686866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b15801561343457600080fd5b505af1158015613448573d6000803e3d6000fd5b505050506040513d602081101561345e57600080fd5b81019080805190602001909291905050509050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef346040518082815260200191505060405180910390a3565b834211156135c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f574554483a2045787069726564207065726d697400000000000000000000000081525060200191505060405180910390fd5b600046905060007f0000000000000000000000000000000000000000000000000000000000000000898989600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120905060007f000000000000000000000000000000000000000000000000000000000000000083146136ef576136ea83613a70565b613711565b7f00000000000000000000000000000000000000000000000000000000000000005b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156137c5573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561383957508a73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6138ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f574554483a20696e76616c6964207065726d697400000000000000000000000081525060200191505060405180910390fd5b88600260008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258b6040518082815260200191505060405180910390a35050505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614613a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f574554483a20666c617368206d696e74206f6e6c79205745544831300000000081525060200191505060405180910390fd5b6000905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280601181526020017f5772617070656420457468657220763130000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208430604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905091905056fe574554483a207472616e7366657220616d6f756e7420657863656564732062616c616e6365574554483a20696e646976696475616c206c6f616e206c696d6974206578636565646564574554483a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220e87a69d93793b3c6ca3761a6f8ee86d5e4633b71bf86a1dbf69cf2f4e425826664736f6c63430007060033"

// DeployWETH10 deploys a new Ethereum contract, binding an instance of WETH10 to it.
func DeployWETH10(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *WETH10, error) {
	parsed, err := abi.JSON(strings.NewReader(WETH10ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(WETH10Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &WETH10{WETH10Caller: WETH10Caller{contract: contract}, WETH10Transactor: WETH10Transactor{contract: contract}, WETH10Filterer: WETH10Filterer{contract: contract}}, nil
}

// WETH10 is an auto generated Go binding around an Ethereum contract.
type WETH10 struct {
	WETH10Caller     // Read-only binding to the contract
	WETH10Transactor // Write-only binding to the contract
	WETH10Filterer   // Log filterer for contract events
}

// WETH10Caller is an auto generated read-only Go binding around an Ethereum contract.
type WETH10Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WETH10Transactor is an auto generated write-only Go binding around an Ethereum contract.
type WETH10Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WETH10Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type WETH10Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WETH10Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type WETH10Session struct {
	Contract     *WETH10           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// WETH10CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type WETH10CallerSession struct {
	Contract *WETH10Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// WETH10TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type WETH10TransactorSession struct {
	Contract     *WETH10Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// WETH10Raw is an auto generated low-level Go binding around an Ethereum contract.
type WETH10Raw struct {
	Contract *WETH10 // Generic contract binding to access the raw methods on
}

// WETH10CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type WETH10CallerRaw struct {
	Contract *WETH10Caller // Generic read-only contract binding to access the raw methods on
}

// WETH10TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type WETH10TransactorRaw struct {
	Contract *WETH10Transactor // Generic write-only contract binding to access the raw methods on
}

// NewWETH10 creates a new instance of WETH10, bound to a specific deployed contract.
func NewWETH10(address common.Address, backend bind.ContractBackend) (*WETH10, error) {
	contract, err := bindWETH10(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &WETH10{WETH10Caller: WETH10Caller{contract: contract}, WETH10Transactor: WETH10Transactor{contract: contract}, WETH10Filterer: WETH10Filterer{contract: contract}}, nil
}

// NewWETH10Caller creates a new read-only instance of WETH10, bound to a specific deployed contract.
func NewWETH10Caller(address common.Address, caller bind.ContractCaller) (*WETH10Caller, error) {
	contract, err := bindWETH10(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &WETH10Caller{contract: contract}, nil
}

// NewWETH10Transactor creates a new write-only instance of WETH10, bound to a specific deployed contract.
func NewWETH10Transactor(address common.Address, transactor bind.ContractTransactor) (*WETH10Transactor, error) {
	contract, err := bindWETH10(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &WETH10Transactor{contract: contract}, nil
}

// NewWETH10Filterer creates a new log filterer instance of WETH10, bound to a specific deployed contract.
func NewWETH10Filterer(address common.Address, filterer bind.ContractFilterer) (*WETH10Filterer, error) {
	contract, err := bindWETH10(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &WETH10Filterer{contract: contract}, nil
}

// bindWETH10 binds a generic wrapper to an already deployed contract.
func bindWETH10(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(WETH10ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WETH10 *WETH10Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WETH10.Contract.WETH10Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WETH10 *WETH10Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETH10.Contract.WETH10Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WETH10 *WETH10Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WETH10.Contract.WETH10Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WETH10 *WETH10CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WETH10.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WETH10 *WETH10TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETH10.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WETH10 *WETH10TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WETH10.Contract.contract.Transact(opts, method, params...)
}

// CALLBACKSUCCESS is a free data retrieval call binding the contract method 0x8237e538.
//
// Solidity: function CALLBACK_SUCCESS() view returns(bytes32)
func (_WETH10 *WETH10Caller) CALLBACKSUCCESS(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "CALLBACK_SUCCESS")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CALLBACKSUCCESS is a free data retrieval call binding the contract method 0x8237e538.
//
// Solidity: function CALLBACK_SUCCESS() view returns(bytes32)
func (_WETH10 *WETH10Session) CALLBACKSUCCESS() ([32]byte, error) {
	return _WETH10.Contract.CALLBACKSUCCESS(&_WETH10.CallOpts)
}

// CALLBACKSUCCESS is a free data retrieval call binding the contract method 0x8237e538.
//
// Solidity: function CALLBACK_SUCCESS() view returns(bytes32)
func (_WETH10 *WETH10CallerSession) CALLBACKSUCCESS() ([32]byte, error) {
	return _WETH10.Contract.CALLBACKSUCCESS(&_WETH10.CallOpts)
}

// DOMAINSEPARATOR is a free data retrieval call binding the contract method 0x3644e515.
//
// Solidity: function DOMAIN_SEPARATOR() view returns(bytes32)
func (_WETH10 *WETH10Caller) DOMAINSEPARATOR(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "DOMAIN_SEPARATOR")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DOMAINSEPARATOR is a free data retrieval call binding the contract method 0x3644e515.
//
// Solidity: function DOMAIN_SEPARATOR() view returns(bytes32)
func (_WETH10 *WETH10Session) DOMAINSEPARATOR() ([32]byte, error) {
	return _WETH10.Contract.DOMAINSEPARATOR(&_WETH10.CallOpts)
}

// DOMAINSEPARATOR is a free data retrieval call binding the contract method 0x3644e515.
//
// Solidity: function DOMAIN_SEPARATOR() view returns(bytes32)
func (_WETH10 *WETH10CallerSession) DOMAINSEPARATOR() ([32]byte, error) {
	return _WETH10.Contract.DOMAINSEPARATOR(&_WETH10.CallOpts)
}

// PERMITTYPEHASH is a free data retrieval call binding the contract method 0x30adf81f.
//
// Solidity: function PERMIT_TYPEHASH() view returns(bytes32)
func (_WETH10 *WETH10Caller) PERMITTYPEHASH(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "PERMIT_TYPEHASH")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PERMITTYPEHASH is a free data retrieval call binding the contract method 0x30adf81f.
//
// Solidity: function PERMIT_TYPEHASH() view returns(bytes32)
func (_WETH10 *WETH10Session) PERMITTYPEHASH() ([32]byte, error) {
	return _WETH10.Contract.PERMITTYPEHASH(&_WETH10.CallOpts)
}

// PERMITTYPEHASH is a free data retrieval call binding the contract method 0x30adf81f.
//
// Solidity: function PERMIT_TYPEHASH() view returns(bytes32)
func (_WETH10 *WETH10CallerSession) PERMITTYPEHASH() ([32]byte, error) {
	return _WETH10.Contract.PERMITTYPEHASH(&_WETH10.CallOpts)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address , address ) view returns(uint256)
func (_WETH10 *WETH10Caller) Allowance(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "allowance", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address , address ) view returns(uint256)
func (_WETH10 *WETH10Session) Allowance(arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	return _WETH10.Contract.Allowance(&_WETH10.CallOpts, arg0, arg1)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address , address ) view returns(uint256)
func (_WETH10 *WETH10CallerSession) Allowance(arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	return _WETH10.Contract.Allowance(&_WETH10.CallOpts, arg0, arg1)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_WETH10 *WETH10Caller) BalanceOf(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "balanceOf", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_WETH10 *WETH10Session) BalanceOf(arg0 common.Address) (*big.Int, error) {
	return _WETH10.Contract.BalanceOf(&_WETH10.CallOpts, arg0)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_WETH10 *WETH10CallerSession) BalanceOf(arg0 common.Address) (*big.Int, error) {
	return _WETH10.Contract.BalanceOf(&_WETH10.CallOpts, arg0)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_WETH10 *WETH10Caller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_WETH10 *WETH10Session) Decimals() (uint8, error) {
	return _WETH10.Contract.Decimals(&_WETH10.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_WETH10 *WETH10CallerSession) Decimals() (uint8, error) {
	return _WETH10.Contract.Decimals(&_WETH10.CallOpts)
}

// DeploymentChainId is a free data retrieval call binding the contract method 0xcd0d0096.
//
// Solidity: function deploymentChainId() view returns(uint256)
func (_WETH10 *WETH10Caller) DeploymentChainId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "deploymentChainId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DeploymentChainId is a free data retrieval call binding the contract method 0xcd0d0096.
//
// Solidity: function deploymentChainId() view returns(uint256)
func (_WETH10 *WETH10Session) DeploymentChainId() (*big.Int, error) {
	return _WETH10.Contract.DeploymentChainId(&_WETH10.CallOpts)
}

// DeploymentChainId is a free data retrieval call binding the contract method 0xcd0d0096.
//
// Solidity: function deploymentChainId() view returns(uint256)
func (_WETH10 *WETH10CallerSession) DeploymentChainId() (*big.Int, error) {
	return _WETH10.Contract.DeploymentChainId(&_WETH10.CallOpts)
}

// FlashFee is a free data retrieval call binding the contract method 0xd9d98ce4.
//
// Solidity: function flashFee(address token, uint256 ) view returns(uint256)
func (_WETH10 *WETH10Caller) FlashFee(opts *bind.CallOpts, token common.Address, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "flashFee", token, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// FlashFee is a free data retrieval call binding the contract method 0xd9d98ce4.
//
// Solidity: function flashFee(address token, uint256 ) view returns(uint256)
func (_WETH10 *WETH10Session) FlashFee(token common.Address, arg1 *big.Int) (*big.Int, error) {
	return _WETH10.Contract.FlashFee(&_WETH10.CallOpts, token, arg1)
}

// FlashFee is a free data retrieval call binding the contract method 0xd9d98ce4.
//
// Solidity: function flashFee(address token, uint256 ) view returns(uint256)
func (_WETH10 *WETH10CallerSession) FlashFee(token common.Address, arg1 *big.Int) (*big.Int, error) {
	return _WETH10.Contract.FlashFee(&_WETH10.CallOpts, token, arg1)
}

// FlashMinted is a free data retrieval call binding the contract method 0x8b28d32f.
//
// Solidity: function flashMinted() view returns(uint256)
func (_WETH10 *WETH10Caller) FlashMinted(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "flashMinted")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// FlashMinted is a free data retrieval call binding the contract method 0x8b28d32f.
//
// Solidity: function flashMinted() view returns(uint256)
func (_WETH10 *WETH10Session) FlashMinted() (*big.Int, error) {
	return _WETH10.Contract.FlashMinted(&_WETH10.CallOpts)
}

// FlashMinted is a free data retrieval call binding the contract method 0x8b28d32f.
//
// Solidity: function flashMinted() view returns(uint256)
func (_WETH10 *WETH10CallerSession) FlashMinted() (*big.Int, error) {
	return _WETH10.Contract.FlashMinted(&_WETH10.CallOpts)
}

// MaxFlashLoan is a free data retrieval call binding the contract method 0x613255ab.
//
// Solidity: function maxFlashLoan(address token) view returns(uint256)
func (_WETH10 *WETH10Caller) MaxFlashLoan(opts *bind.CallOpts, token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "maxFlashLoan", token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxFlashLoan is a free data retrieval call binding the contract method 0x613255ab.
//
// Solidity: function maxFlashLoan(address token) view returns(uint256)
func (_WETH10 *WETH10Session) MaxFlashLoan(token common.Address) (*big.Int, error) {
	return _WETH10.Contract.MaxFlashLoan(&_WETH10.CallOpts, token)
}

// MaxFlashLoan is a free data retrieval call binding the contract method 0x613255ab.
//
// Solidity: function maxFlashLoan(address token) view returns(uint256)
func (_WETH10 *WETH10CallerSession) MaxFlashLoan(token common.Address) (*big.Int, error) {
	return _WETH10.Contract.MaxFlashLoan(&_WETH10.CallOpts, token)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_WETH10 *WETH10Caller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_WETH10 *WETH10Session) Name() (string, error) {
	return _WETH10.Contract.Name(&_WETH10.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_WETH10 *WETH10CallerSession) Name() (string, error) {
	return _WETH10.Contract.Name(&_WETH10.CallOpts)
}

// Nonces is a free data retrieval call binding the contract method 0x7ecebe00.
//
// Solidity: function nonces(address ) view returns(uint256)
func (_WETH10 *WETH10Caller) Nonces(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "nonces", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Nonces is a free data retrieval call binding the contract method 0x7ecebe00.
//
// Solidity: function nonces(address ) view returns(uint256)
func (_WETH10 *WETH10Session) Nonces(arg0 common.Address) (*big.Int, error) {
	return _WETH10.Contract.Nonces(&_WETH10.CallOpts, arg0)
}

// Nonces is a free data retrieval call binding the contract method 0x7ecebe00.
//
// Solidity: function nonces(address ) view returns(uint256)
func (_WETH10 *WETH10CallerSession) Nonces(arg0 common.Address) (*big.Int, error) {
	return _WETH10.Contract.Nonces(&_WETH10.CallOpts, arg0)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_WETH10 *WETH10Caller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_WETH10 *WETH10Session) Symbol() (string, error) {
	return _WETH10.Contract.Symbol(&_WETH10.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_WETH10 *WETH10CallerSession) Symbol() (string, error) {
	return _WETH10.Contract.Symbol(&_WETH10.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_WETH10 *WETH10Caller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WETH10.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_WETH10 *WETH10Session) TotalSupply() (*big.Int, error) {
	return _WETH10.Contract.TotalSupply(&_WETH10.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_WETH10 *WETH10CallerSession) TotalSupply() (*big.Int, error) {
	return _WETH10.Contract.TotalSupply(&_WETH10.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 value) returns(bool)
func (_WETH10 *WETH10Transactor) Approve(opts *bind.TransactOpts, spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "approve", spender, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 value) returns(bool)
func (_WETH10 *WETH10Session) Approve(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Approve(&_WETH10.TransactOpts, spender, value)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address spender, uint256 value) returns(bool)
func (_WETH10 *WETH10TransactorSession) Approve(spender common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Approve(&_WETH10.TransactOpts, spender, value)
}

// ApproveAndCall is a paid mutator transaction binding the contract method 0xcae9ca51.
//
// Solidity: function approveAndCall(address spender, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10Transactor) ApproveAndCall(opts *bind.TransactOpts, spender common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "approveAndCall", spender, value, data)
}

// ApproveAndCall is a paid mutator transaction binding the contract method 0xcae9ca51.
//
// Solidity: function approveAndCall(address spender, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10Session) ApproveAndCall(spender common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.ApproveAndCall(&_WETH10.TransactOpts, spender, value, data)
}

// ApproveAndCall is a paid mutator transaction binding the contract method 0xcae9ca51.
//
// Solidity: function approveAndCall(address spender, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10TransactorSession) ApproveAndCall(spender common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.ApproveAndCall(&_WETH10.TransactOpts, spender, value, data)
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() payable returns()
func (_WETH10 *WETH10Transactor) Deposit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "deposit")
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() payable returns()
func (_WETH10 *WETH10Session) Deposit() (*types.Transaction, error) {
	return _WETH10.Contract.Deposit(&_WETH10.TransactOpts)
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() payable returns()
func (_WETH10 *WETH10TransactorSession) Deposit() (*types.Transaction, error) {
	return _WETH10.Contract.Deposit(&_WETH10.TransactOpts)
}

// DepositTo is a paid mutator transaction binding the contract method 0xb760faf9.
//
// Solidity: function depositTo(address to) payable returns()
func (_WETH10 *WETH10Transactor) DepositTo(opts *bind.TransactOpts, to common.Address) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "depositTo", to)
}

// DepositTo is a paid mutator transaction binding the contract method 0xb760faf9.
//
// Solidity: function depositTo(address to) payable returns()
func (_WETH10 *WETH10Session) DepositTo(to common.Address) (*types.Transaction, error) {
	return _WETH10.Contract.DepositTo(&_WETH10.TransactOpts, to)
}

// DepositTo is a paid mutator transaction binding the contract method 0xb760faf9.
//
// Solidity: function depositTo(address to) payable returns()
func (_WETH10 *WETH10TransactorSession) DepositTo(to common.Address) (*types.Transaction, error) {
	return _WETH10.Contract.DepositTo(&_WETH10.TransactOpts, to)
}

// DepositToAndCall is a paid mutator transaction binding the contract method 0x5ddb7d7e.
//
// Solidity: function depositToAndCall(address to, bytes data) payable returns(bool success)
func (_WETH10 *WETH10Transactor) DepositToAndCall(opts *bind.TransactOpts, to common.Address, data []byte) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "depositToAndCall", to, data)
}

// DepositToAndCall is a paid mutator transaction binding the contract method 0x5ddb7d7e.
//
// Solidity: function depositToAndCall(address to, bytes data) payable returns(bool success)
func (_WETH10 *WETH10Session) DepositToAndCall(to common.Address, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.DepositToAndCall(&_WETH10.TransactOpts, to, data)
}

// DepositToAndCall is a paid mutator transaction binding the contract method 0x5ddb7d7e.
//
// Solidity: function depositToAndCall(address to, bytes data) payable returns(bool success)
func (_WETH10 *WETH10TransactorSession) DepositToAndCall(to common.Address, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.DepositToAndCall(&_WETH10.TransactOpts, to, data)
}

// FlashLoan is a paid mutator transaction binding the contract method 0x5cffe9de.
//
// Solidity: function flashLoan(address receiver, address token, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10Transactor) FlashLoan(opts *bind.TransactOpts, receiver common.Address, token common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "flashLoan", receiver, token, value, data)
}

// FlashLoan is a paid mutator transaction binding the contract method 0x5cffe9de.
//
// Solidity: function flashLoan(address receiver, address token, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10Session) FlashLoan(receiver common.Address, token common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.FlashLoan(&_WETH10.TransactOpts, receiver, token, value, data)
}

// FlashLoan is a paid mutator transaction binding the contract method 0x5cffe9de.
//
// Solidity: function flashLoan(address receiver, address token, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10TransactorSession) FlashLoan(receiver common.Address, token common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.FlashLoan(&_WETH10.TransactOpts, receiver, token, value, data)
}

// Mint is a paid mutator transaction binding the contract method 0xa0712d68.
//
// Solidity: function mint(uint256 value) returns()
func (_WETH10 *WETH10Transactor) Mint(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "mint", value)
}

// Mint is a paid mutator transaction binding the contract method 0xa0712d68.
//
// Solidity: function mint(uint256 value) returns()
func (_WETH10 *WETH10Session) Mint(value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Mint(&_WETH10.TransactOpts, value)
}

// Mint is a paid mutator transaction binding the contract method 0xa0712d68.
//
// Solidity: function mint(uint256 value) returns()
func (_WETH10 *WETH10TransactorSession) Mint(value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Mint(&_WETH10.TransactOpts, value)
}

// Permit is a paid mutator transaction binding the contract method 0xd505accf.
//
// Solidity: function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns()
func (_WETH10 *WETH10Transactor) Permit(opts *bind.TransactOpts, owner common.Address, spender common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "permit", owner, spender, value, deadline, v, r, s)
}

// Permit is a paid mutator transaction binding the contract method 0xd505accf.
//
// Solidity: function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns()
func (_WETH10 *WETH10Session) Permit(owner common.Address, spender common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _WETH10.Contract.Permit(&_WETH10.TransactOpts, owner, spender, value, deadline, v, r, s)
}

// Permit is a paid mutator transaction binding the contract method 0xd505accf.
//
// Solidity: function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns()
func (_WETH10 *WETH10TransactorSession) Permit(owner common.Address, spender common.Address, value *big.Int, deadline *big.Int, v uint8, r [32]byte, s [32]byte) (*types.Transaction, error) {
	return _WETH10.Contract.Permit(&_WETH10.TransactOpts, owner, spender, value, deadline, v, r, s)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 value) returns(bool)
func (_WETH10 *WETH10Transactor) Transfer(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "transfer", to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 value) returns(bool)
func (_WETH10 *WETH10Session) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Transfer(&_WETH10.TransactOpts, to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 value) returns(bool)
func (_WETH10 *WETH10TransactorSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Transfer(&_WETH10.TransactOpts, to, value)
}

// TransferAndCall is a paid mutator transaction binding the contract method 0x4000aea0.
//
// Solidity: function transferAndCall(address to, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10Transactor) TransferAndCall(opts *bind.TransactOpts, to common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "transferAndCall", to, value, data)
}

// TransferAndCall is a paid mutator transaction binding the contract method 0x4000aea0.
//
// Solidity: function transferAndCall(address to, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10Session) TransferAndCall(to common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.TransferAndCall(&_WETH10.TransactOpts, to, value, data)
}

// TransferAndCall is a paid mutator transaction binding the contract method 0x4000aea0.
//
// Solidity: function transferAndCall(address to, uint256 value, bytes data) returns(bool)
func (_WETH10 *WETH10TransactorSession) TransferAndCall(to common.Address, value *big.Int, data []byte) (*types.Transaction, error) {
	return _WETH10.Contract.TransferAndCall(&_WETH10.TransactOpts, to, value, data)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 value) returns(bool)
func (_WETH10 *WETH10Transactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "transferFrom", from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 value) returns(bool)
func (_WETH10 *WETH10Session) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.TransferFrom(&_WETH10.TransactOpts, from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 value) returns(bool)
func (_WETH10 *WETH10TransactorSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.TransferFrom(&_WETH10.TransactOpts, from, to, value)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 value) returns()
func (_WETH10 *WETH10Transactor) Withdraw(opts *bind.TransactOpts, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "withdraw", value)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 value) returns()
func (_WETH10 *WETH10Session) Withdraw(value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Withdraw(&_WETH10.TransactOpts, value)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 value) returns()
func (_WETH10 *WETH10TransactorSession) Withdraw(value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.Withdraw(&_WETH10.TransactOpts, value)
}

// WithdrawFrom is a paid mutator transaction binding the contract method 0x9555a942.
//
// Solidity: function withdrawFrom(address from, address to, uint256 value) returns()
func (_WETH10 *WETH10Transactor) WithdrawFrom(opts *bind.TransactOpts, from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "withdrawFrom", from, to, value)
}

// WithdrawFrom is a paid mutator transaction binding the contract method 0x9555a942.
//
// Solidity: function withdrawFrom(address from, address to, uint256 value) returns()
func (_WETH10 *WETH10Session) WithdrawFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.WithdrawFrom(&_WETH10.TransactOpts, from, to, value)
}

// WithdrawFrom is a paid mutator transaction binding the contract method 0x9555a942.
//
// Solidity: function withdrawFrom(address from, address to, uint256 value) returns()
func (_WETH10 *WETH10TransactorSession) WithdrawFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.WithdrawFrom(&_WETH10.TransactOpts, from, to, value)
}

// WithdrawTo is a paid mutator transaction binding the contract method 0x205c2878.
//
// Solidity: function withdrawTo(address to, uint256 value) returns()
func (_WETH10 *WETH10Transactor) WithdrawTo(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.contract.Transact(opts, "withdrawTo", to, value)
}

// WithdrawTo is a paid mutator transaction binding the contract method 0x205c2878.
//
// Solidity: function withdrawTo(address to, uint256 value) returns()
func (_WETH10 *WETH10Session) WithdrawTo(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.WithdrawTo(&_WETH10.TransactOpts, to, value)
}

// WithdrawTo is a paid mutator transaction binding the contract method 0x205c2878.
//
// Solidity: function withdrawTo(address to, uint256 value) returns()
func (_WETH10 *WETH10TransactorSession) WithdrawTo(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _WETH10.Contract.WithdrawTo(&_WETH10.TransactOpts, to, value)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_WETH10 *WETH10Transactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WETH10.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_WETH10 *WETH10Session) Receive() (*types.Transaction, error) {
	return _WETH10.Contract.Receive(&_WETH10.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_WETH10 *WETH10TransactorSession) Receive() (*types.Transaction, error) {
	return _WETH10.Contract.Receive(&_WETH10.TransactOpts)
}

// WETH10ApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the WETH10 contract.
type WETH10ApprovalIterator struct {
	Event *WETH10Approval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *WETH10ApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(WETH10Approval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(WETH10Approval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *WETH10ApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *WETH10ApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// WETH10Approval represents a Approval event raised by the WETH10 contract.
type WETH10Approval struct {
	Owner   common.Address
	Spender common.Address
	Value   *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_WETH10 *WETH10Filterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, spender []common.Address) (*WETH10ApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _WETH10.contract.FilterLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return &WETH10ApprovalIterator{contract: _WETH10.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_WETH10 *WETH10Filterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *WETH10Approval, owner []common.Address, spender []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var spenderRule []interface{}
	for _, spenderItem := range spender {
		spenderRule = append(spenderRule, spenderItem)
	}

	logs, sub, err := _WETH10.contract.WatchLogs(opts, "Approval", ownerRule, spenderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(WETH10Approval)
				if err := _WETH10.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed spender, uint256 value)
func (_WETH10 *WETH10Filterer) ParseApproval(log types.Log) (*WETH10Approval, error) {
	event := new(WETH10Approval)
	if err := _WETH10.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// WETH10TransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the WETH10 contract.
type WETH10TransferIterator struct {
	Event *WETH10Transfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *WETH10TransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(WETH10Transfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(WETH10Transfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *WETH10TransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *WETH10TransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// WETH10Transfer represents a Transfer event raised by the WETH10 contract.
type WETH10Transfer struct {
	From  common.Address
	To    common.Address
	Value *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_WETH10 *WETH10Filterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*WETH10TransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _WETH10.contract.FilterLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &WETH10TransferIterator{contract: _WETH10.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_WETH10 *WETH10Filterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *WETH10Transfer, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _WETH10.contract.WatchLogs(opts, "Transfer", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(WETH10Transfer)
				if err := _WETH10.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 value)
func (_WETH10 *WETH10Filterer) ParseTransfer(log types.Log) (*WETH10Transfer, error) {
	event := new(WETH10Transfer)
	if err := _WETH10.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
